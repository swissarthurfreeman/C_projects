    /*while (1) {
        //getpid récupère le pid du processus.
        printf("PID=%ld> ", (long) getpid());
        
        fflush(stdout);
        
        //morceau de code qui gère la construction de cmd, le string
        //contenant la séquence de caractères définissant la séquence.
        char cmd[6],ch;
        int i=0;
        //getchar récupère charactère par charactère sur stdin.
        while( (ch=getchar()) !='\n') {
            if (ch == '?') {
                print_help();
                continue;
            }
            //si on a fournit trop de paramètres. 
            if ((i >= 5) && (ch != ' ')) {
                printf("Too many arguments supplied, all arguments \
                following \'%c\' will be ignored.", cmd[i-1]);    
                break;    
            }
            //si on a fourni un caractère qui n'est pas un espace.
            if ((ch != ' ') && (i < 5) ){
                cmd[i]=ch;
                i++;
            }
        }
        i++;
        //le dernier caractère termine le string.
        cmd[i] = '\0';
        
        //si on a fournit assez d'arguments, cmd est le string de la commande.
        if (i >= 3) {
            printf("Command is : %s \n", cmd);
        }
        
        for(int i = 0; i < strlen(cmd); i++) {
            switch (cmd[i]) {
                case 'g':
                    printf("get \n");
                    break;
                case 's':
                    printf("set \n");
                    
                    break;
                case 'w':
                    printf("wait \n");
                    break;
                default:
                    break;
            }
        }
    }*/
